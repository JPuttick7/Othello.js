initialBoard = [[' ',' ',' ',' ',' ',' ',' ',' '], 
                [' ',' ',' ',' ',' ',' ',' ',' '], 
                [' ',' ',' ',' ',' ',' ',' ',' '], 
                [' ',' ',' ','b','w',' ',' ',' '], 
                [' ',' ',' ','w','b',' ',' ',' '], 
                [' ',' ',' ',' ',' ',' ',' ',' '], 
                [' ',' ',' ',' ',' ',' ',' ',' '], 
                [' ',' ',' ',' ',' ',' ',' ',' ']]
board = initialBoard
checkPlay = {'w': 1, 'b': -1, ' ': 0}
dir = [1, -1]
boardElem = HTML DIV ELEMENT
infoDiv = HTML DIV ELEMENT
scoreDiv = HTML DIV ELEMENT
gameMode = '1'  // 1 - 1player, 2 - 2player, 0 - AIvsAI
player = 'b'  // b - black, w - white
passCount = 0
undoable = False

init()


SUBPROCESS init():
  undoable = False
  player = 'b'
  board = initialBoard
  render()


SUBPROCESS render():
  gameOver = True
  idealMove = []
  FOR row IN board:
    boardRow = CREATE BOARD ROW
    ADD boardRow TO HTML boardElem
    FOR col IN row:
      boardSquare = CREATE HTML BOARD SQUARE
      ADD boardSquare TO HTML boardRow
      IF board[row][col] == 'w' OR board[row][col] == 'b':
        boardPeice = CREATE HTML BOARD PEICE
      playable = check(row, col, player)
      IF playable:
        gameOver = True
        boardSquare ADD CLASS NAME 'clickable'
        IF gameMode == '2player' OR (gameMode == '1player' AND player == 'black'):
          boardSquare ADD onClick event to placePeice(row,col)
      ELSE:
        pass()
  updateInfo(gameOver)


SUBPROCESS updateInfo(gameOver):
  IF NOT gameOver:
    IF gameMode == '1player':
      IF player == 'black':
        infoDiv.text = 'Black\'s move'
      ELSE:
        infoDiv.text = 'AI\'s move'
    ELSE IF gameMode == '2player':
      IF player == 'black':
        infoDiv.text = 'Black\'s move'
      ELSE:
        infoDiv.text = 'White\'s move'
    ELSE:
      IF player == 'black':
        infoDiv.text = 'Black AI\'s move'
      ELSE:
        infoDiv.text = 'White AI\'s move'
    IF gameMode == 'AIvsAI':
      AI MAKE MOVE AFTER 1 SECOND DELAY
  findTotal()


SUBPROCESS findTotal():
  FOR row TO board.length:
    FOR col TO board[row].length:
      IF board[row][col] == 'white':
        whiteTotal += 1
      ELSE IF board[row][col] == 'black':
        blackTotal += 1
  scoreDiv.text = 'black: ' + blackTotal + ' | white: ' + whiteTotal
  IF whiteTotal + blackTotal == 64:
    IF whiteTotal > blackTotal:
      infoDiv.text = 'WHITE WINS!'
    ELSE IF whiteTotal < blackTotal:
      infoDiv.text = 'BLACK WINS!'
    ELSE:
      infoDiv.text = 'DRAW!'


SUBPROCESS placePeice(row, col):
  board[r][c] = player
  capture(row, col)
  player = changePlayer()
  render()


SUBPROCESS check(row, col):
	var direction = [0,0,0,0,0,0,0,0]
	FOR i = 0 TO 7:
		IF i < 2:
      x = dir[i]
      y = 0
		ELSE IF i < 4:
      x = 0
      y = dir[i-2]
		ELSE IF i < 6:
      x = dir[i-4]
      y = x
		ELSE :
      x = dir[i-6]
      y = -x
		TRY:
      IF player == 'white':
        otherPlayer = 'black'
      ELSE:
        otherPlayer = 'white'
			WHILE board[row][col] == otherPlayer:
				direction[i] += 1; 
				IF i < 2:
          x += dir[i]
				ELSE IF i < 4:
          y += dir[i-2]
				ELSE IF i < 6:
          x += dir[i-4]
          y = x
				ELSE: 
          x += dir[i-6]
          y = -x
			IF board[r - x][c - y] != player:
				direction[i] = 0
		CATCH:
			direction[i] = 0
	RETURN direction


SUBPROCESS capture(row, col):
  FOR i = 0 TO 7:
    FOR z = 0 TO board[i].length - 1:
      IF i < 2:
        x = dir[i] * z
        y = 0
			ELSE IF i < 4: 
        x = 0
        y = dir[i-2] * z
			ELSE IF i < 6:
        x = dir[i-4] * z 
        y = x
			ELSE:
        x = dir[i-6] * z
        y = -x
      board[row - x][col - y] = player
      
        
SUBPROCESS pass():
  IF gameMode != 2 AND passCount < 2:
    passCount += 1
    player = changePlayer()
    render()
  ELSE IF passCount >= 2:
    findTotal()


SUBPROCESS undo():
	IF (undoable == true AND gameMode != 0):
		IF (gameMode == 2):
			board = boardBackup
      player = changePlayer()
    ELSE IF (gameMode == 1):
			board = boardBackup2;
		undoable = False;
		renderBoard();

SUBPROCESS setMode(mode):
  IF mode == '1player':
    gameMode = 1
  ELSE IF mode = '2player':
    gameMode = 2
  ELSE IF mode = 'AIvsAI':
    gameMode = 0
  ELSE:
    OUTPUT('error - invalid game mode')


SUBPROCESS changePlayer():
  IF player == 'black':
    player = 'white'
  ELSE:
    player = 'black'
  return player

